{"ast":null,"code":"import api from './api';\nexport const journalService = {\n  getPublicJournals: async () => {\n    const response = await api.get('/journals/public');\n    return response.data;\n  },\n  getAllJournals: async () => {\n    const response = await api.get('/journals');\n    return response.data;\n  },\n  getUserJournals: async () => {\n    const response = await api.get('/journals/my-journals');\n    return response.data;\n  },\n  getJournalById: async id => {\n    const response = await api.get(`/journals/${id}`);\n    return response.data;\n  },\n  createJournal: async journalData => {\n    const response = await api.post('/journals', journalData);\n    return response.data;\n  },\n  updateJournal: async (id, journalData) => {\n    const response = await api.put(`/journals/${id}`, journalData);\n    return response.data;\n  },\n  deleteJournal: async id => {\n    await api.delete(`/journals/${id}`);\n  },\n  searchJournals: async keyword => {\n    const response = await api.get(`/journals/search?keyword=${encodeURIComponent(keyword)}`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","journalService","getPublicJournals","response","get","data","getAllJournals","getUserJournals","getJournalById","id","createJournal","journalData","post","updateJournal","put","deleteJournal","delete","searchJournals","keyword","encodeURIComponent"],"sources":["D:/project/iyip-platform/frontend/src/services/journal.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const journalService = {\r\n    getPublicJournals: async () => {\r\n        const response = await api.get('/journals/public');\r\n        return response.data;\r\n    },\r\n\r\n    getAllJournals: async () => {\r\n        const response = await api.get('/journals');\r\n        return response.data;\r\n    },\r\n\r\n    getUserJournals: async () => {\r\n        const response = await api.get('/journals/my-journals');\r\n        return response.data;\r\n    },\r\n\r\n    getJournalById: async (id) => {\r\n        const response = await api.get(`/journals/${id}`);\r\n        return response.data;\r\n    },\r\n\r\n    createJournal: async (journalData) => {\r\n        const response = await api.post('/journals', journalData);\r\n        return response.data;\r\n    },\r\n\r\n    updateJournal: async (id, journalData) => {\r\n        const response = await api.put(`/journals/${id}`, journalData);\r\n        return response.data;\r\n    },\r\n\r\n    deleteJournal: async (id) => {\r\n        await api.delete(`/journals/${id}`);\r\n    },\r\n\r\n    searchJournals: async (keyword) => {\r\n        const response = await api.get(`/journals/search?keyword=${encodeURIComponent(keyword)}`);\r\n        return response.data;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,cAAc,GAAG;EAC1BC,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDC,cAAc,EAAE,MAAAA,CAAA,KAAY;IACxB,MAAMH,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDE,eAAe,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,uBAAuB,CAAC;IACvD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDG,cAAc,EAAE,MAAOC,EAAE,IAAK;IAC1B,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,aAAaK,EAAE,EAAE,CAAC;IACjD,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDK,aAAa,EAAE,MAAOC,WAAW,IAAK;IAClC,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACY,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;IACzD,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDQ,aAAa,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,WAAW,KAAK;IACtC,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACc,GAAG,CAAC,aAAaL,EAAE,EAAE,EAAEE,WAAW,CAAC;IAC9D,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDU,aAAa,EAAE,MAAON,EAAE,IAAK;IACzB,MAAMT,GAAG,CAACgB,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;EACvC,CAAC;EAEDQ,cAAc,EAAE,MAAOC,OAAO,IAAK;IAC/B,MAAMf,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,4BAA4Be,kBAAkB,CAACD,OAAO,CAAC,EAAE,CAAC;IACzF,OAAOf,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}