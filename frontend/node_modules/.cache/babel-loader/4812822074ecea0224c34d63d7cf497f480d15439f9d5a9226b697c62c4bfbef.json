{"ast":null,"code":"// frontend/src/services/submission.js\nimport api from './api';\n\n// Journal Service\nexport const journalService = {\n  getPublicJournals: async () => {\n    const response = await api.get('/journals/public');\n    return response.data;\n  },\n  getAllJournals: async () => {\n    const response = await api.get('/journals');\n    return response.data;\n  },\n  getUserJournals: async () => {\n    const response = await api.get('/journals/my-journals');\n    return response.data;\n  },\n  getJournalById: async id => {\n    const response = await api.get(`/journals/${id}`);\n    return response.data;\n  },\n  createJournal: async journalData => {\n    const response = await api.post('/journals', journalData);\n    return response.data;\n  },\n  updateJournal: async (id, journalData) => {\n    const response = await api.put(`/journals/${id}`, journalData);\n    return response.data;\n  },\n  deleteJournal: async id => {\n    await api.delete(`/journals/${id}`);\n  },\n  searchJournals: async keyword => {\n    const response = await api.get(`/journals/search?keyword=${encodeURIComponent(keyword)}`);\n    return response.data;\n  }\n};\n\n// Submission Service\nexport const submissionService = {\n  getUserSubmissions: async () => {\n    const response = await api.get('/submissions/my-submissions');\n    return response.data;\n  },\n  getAllSubmissions: async () => {\n    const response = await api.get('/submissions');\n    return response.data;\n  },\n  getSubmissionById: async id => {\n    const response = await api.get(`/submissions/${id}`);\n    return response.data;\n  },\n  createSubmission: async submissionData => {\n    const response = await api.post('/submissions', submissionData);\n    return response.data;\n  },\n  updateSubmission: async (id, submissionData) => {\n    const response = await api.put(`/submissions/${id}`, submissionData);\n    return response.data;\n  },\n  deleteSubmission: async id => {\n    await api.delete(`/submissions/${id}`);\n  },\n  getSubmissionsByStatus: async status => {\n    const response = await api.get(`/submissions/by-status/${status}`);\n    return response.data;\n  },\n  updateSubmissionStatus: async (id, status) => {\n    const response = await api.put(`/submissions/${id}/status`, {\n      status\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","journalService","getPublicJournals","response","get","data","getAllJournals","getUserJournals","getJournalById","id","createJournal","journalData","post","updateJournal","put","deleteJournal","delete","searchJournals","keyword","encodeURIComponent","submissionService","getUserSubmissions","getAllSubmissions","getSubmissionById","createSubmission","submissionData","updateSubmission","deleteSubmission","getSubmissionsByStatus","status","updateSubmissionStatus"],"sources":["D:/Web/iyip-platform-rai/frontend/src/services/submission.js"],"sourcesContent":["// frontend/src/services/submission.js\r\nimport api from './api';\r\n\r\n// Journal Service\r\nexport const journalService = {\r\n    getPublicJournals: async () => {\r\n        const response = await api.get('/journals/public');\r\n        return response.data;\r\n    },\r\n\r\n    getAllJournals: async () => {\r\n        const response = await api.get('/journals');\r\n        return response.data;\r\n    },\r\n\r\n    getUserJournals: async () => {\r\n        const response = await api.get('/journals/my-journals');\r\n        return response.data;\r\n    },\r\n\r\n    getJournalById: async (id) => {\r\n        const response = await api.get(`/journals/${id}`);\r\n        return response.data;\r\n    },\r\n\r\n    createJournal: async (journalData) => {\r\n        const response = await api.post('/journals', journalData);\r\n        return response.data;\r\n    },\r\n\r\n    updateJournal: async (id, journalData) => {\r\n        const response = await api.put(`/journals/${id}`, journalData);\r\n        return response.data;\r\n    },\r\n\r\n    deleteJournal: async (id) => {\r\n        await api.delete(`/journals/${id}`);\r\n    },\r\n\r\n    searchJournals: async (keyword) => {\r\n        const response = await api.get(`/journals/search?keyword=${encodeURIComponent(keyword)}`);\r\n        return response.data;\r\n    }\r\n};\r\n\r\n// Submission Service\r\nexport const submissionService = {\r\n    getUserSubmissions: async () => {\r\n        const response = await api.get('/submissions/my-submissions');\r\n        return response.data;\r\n    },\r\n\r\n    getAllSubmissions: async () => {\r\n        const response = await api.get('/submissions');\r\n        return response.data;\r\n    },\r\n\r\n    getSubmissionById: async (id) => {\r\n        const response = await api.get(`/submissions/${id}`);\r\n        return response.data;\r\n    },\r\n\r\n    createSubmission: async (submissionData) => {\r\n        const response = await api.post('/submissions', submissionData);\r\n        return response.data;\r\n    },\r\n\r\n    updateSubmission: async (id, submissionData) => {\r\n        const response = await api.put(`/submissions/${id}`, submissionData);\r\n        return response.data;\r\n    },\r\n\r\n    deleteSubmission: async (id) => {\r\n        await api.delete(`/submissions/${id}`);\r\n    },\r\n\r\n    getSubmissionsByStatus: async (status) => {\r\n        const response = await api.get(`/submissions/by-status/${status}`);\r\n        return response.data;\r\n    },\r\n\r\n    updateSubmissionStatus: async (id, status) => {\r\n        const response = await api.put(`/submissions/${id}/status`, { status });\r\n        return response.data;\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}