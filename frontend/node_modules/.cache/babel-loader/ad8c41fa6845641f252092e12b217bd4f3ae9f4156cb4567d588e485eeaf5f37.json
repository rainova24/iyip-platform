{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\iyip-platform-rai\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\";\n// frontend/src/contexts/AuthContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Configure axios defaults\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// Add token to requests if it exists\naxios.interceptors.request.use(config => {\n  var _config$method;\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to:`, config.url);\n  return config;\n}, error => Promise.reject(error));\n\n// Handle responses and token expiration\naxios.interceptors.response.use(response => {\n  console.log(`Response from ${response.config.url}:`, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Only redirect if not already on login page\n    if (window.location.pathname !== '/login') {\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (token && storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setIsAuthenticated(true);\n        console.log('Restored user from localStorage:', userData);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        logout();\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      console.log('Attempting login for:', email);\n      const response = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      console.log('Login response:', response.data);\n\n      // Handle different response formats\n      let userData, token;\n      if (response.data.success) {\n        var _response$data$data, _response$data$data2;\n        // Backend returns { success: true, data: { token, user } }\n        userData = ((_response$data$data = response.data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.user) || response.data.user;\n        token = ((_response$data$data2 = response.data.data) === null || _response$data$data2 === void 0 ? void 0 : _response$data$data2.token) || response.data.token;\n      } else {\n        // Direct response format\n        userData = response.data.user;\n        token = response.data.token;\n      }\n      if (!token || !userData) {\n        throw new Error('Invalid response format: missing token or user data');\n      }\n\n      // Store token and user data\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n\n      // Update state\n      setUser(userData);\n      setIsAuthenticated(true);\n      console.log('Login successful for user:', userData);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      let message = 'Login failed. Please try again.';\n      if (error.response) {\n        var _error$response$data;\n        if (error.response.status === 401) {\n          message = 'Invalid email or password.';\n        } else if ((_error$response$data = error.response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n          message = error.response.data.message;\n        }\n      } else if (error.request) {\n        message = 'Cannot connect to server. Please check your connection.';\n      }\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      console.log('Attempting registration for:', userData.email);\n      const response = await axios.post('/auth/register', userData);\n      console.log('Registration response:', response.data);\n      return {\n        success: true,\n        message: 'Registration successful! Please login.'\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4;\n      console.error('Registration error:', error);\n      let message = 'Registration failed. Please try again.';\n      if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.message) {\n        message = error.response.data.message;\n      } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 400) {\n        message = 'Email or NIM already registered.';\n      }\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    console.log('Logging out user');\n\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Clear axios default header\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const updateUser = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n    console.log('Updated user data:', userData);\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","API_BASE_URL","process","env","REACT_APP_API_URL","defaults","baseURL","headers","post","interceptors","request","use","config","_config$method","token","localStorage","getItem","Authorization","console","log","method","toUpperCase","url","error","Promise","reject","response","data","_error$response","_error$response2","message","status","removeItem","window","location","pathname","href","useAuth","context","Error","AuthProvider","children","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","storedUser","userData","JSON","parse","logout","login","email","password","success","_response$data$data","_response$data$data2","setItem","stringify","_error$response$data","register","_error$response3","_error$response3$data","_error$response4","common","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Web/iyip-platform-rai/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["// frontend/src/contexts/AuthContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\n\r\n// Configure axios defaults\r\naxios.defaults.baseURL = API_BASE_URL;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\n// Add token to requests if it exists\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        console.log(`Making ${config.method?.toUpperCase()} request to:`, config.url);\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\n// Handle responses and token expiration\r\naxios.interceptors.response.use(\r\n    (response) => {\r\n        console.log(`Response from ${response.config.url}:`, response.data);\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('API Error:', error.response?.data || error.message);\r\n\r\n        if (error.response?.status === 401) {\r\n            // Token expired or invalid\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n\r\n            // Only redirect if not already on login page\r\n            if (window.location.pathname !== '/login') {\r\n                window.location.href = '/login';\r\n            }\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Check if user is logged in on mount\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        const storedUser = localStorage.getItem('user');\r\n\r\n        if (token && storedUser) {\r\n            try {\r\n                const userData = JSON.parse(storedUser);\r\n                setUser(userData);\r\n                setIsAuthenticated(true);\r\n                console.log('Restored user from localStorage:', userData);\r\n            } catch (error) {\r\n                console.error('Error parsing stored user data:', error);\r\n                logout();\r\n            }\r\n        }\r\n\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            console.log('Attempting login for:', email);\r\n\r\n            const response = await axios.post('/auth/login', {\r\n                email,\r\n                password\r\n            });\r\n\r\n            console.log('Login response:', response.data);\r\n\r\n            // Handle different response formats\r\n            let userData, token;\r\n\r\n            if (response.data.success) {\r\n                // Backend returns { success: true, data: { token, user } }\r\n                userData = response.data.data?.user || response.data.user;\r\n                token = response.data.data?.token || response.data.token;\r\n            } else {\r\n                // Direct response format\r\n                userData = response.data.user;\r\n                token = response.data.token;\r\n            }\r\n\r\n            if (!token || !userData) {\r\n                throw new Error('Invalid response format: missing token or user data');\r\n            }\r\n\r\n            // Store token and user data\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n\r\n            // Update state\r\n            setUser(userData);\r\n            setIsAuthenticated(true);\r\n\r\n            console.log('Login successful for user:', userData);\r\n\r\n            return {\r\n                success: true,\r\n                user: userData\r\n            };\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n\r\n            let message = 'Login failed. Please try again.';\r\n\r\n            if (error.response) {\r\n                if (error.response.status === 401) {\r\n                    message = 'Invalid email or password.';\r\n                } else if (error.response.data?.message) {\r\n                    message = error.response.data.message;\r\n                }\r\n            } else if (error.request) {\r\n                message = 'Cannot connect to server. Please check your connection.';\r\n            }\r\n\r\n            return {\r\n                success: false,\r\n                message\r\n            };\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            console.log('Attempting registration for:', userData.email);\r\n\r\n            const response = await axios.post('/auth/register', userData);\r\n\r\n            console.log('Registration response:', response.data);\r\n\r\n            return {\r\n                success: true,\r\n                message: 'Registration successful! Please login.'\r\n            };\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n\r\n            let message = 'Registration failed. Please try again.';\r\n\r\n            if (error.response?.data?.message) {\r\n                message = error.response.data.message;\r\n            } else if (error.response?.status === 400) {\r\n                message = 'Email or NIM already registered.';\r\n            }\r\n\r\n            return {\r\n                success: false,\r\n                message\r\n            };\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log('Logging out user');\r\n\r\n        // Clear localStorage\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n\r\n        // Clear axios default header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        // Update state\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    const updateUser = (userData) => {\r\n        setUser(userData);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        console.log('Updated user data:', userData);\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        isAuthenticated,\r\n        loading,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateUser\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}